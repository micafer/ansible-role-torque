# RedHat related OSs
- name: Yum install {{ item }}
  action: yum pkg={{ item }} state=installed
  when: "ansible_os_family == 'RedHat'"
  with_items:
  - nfs-utils
  - torque-server
  - torque-scheduler
  - torque-client

# Debian related OSs
- name: Apt install {{ item }}
  action: apt pkg={{ item }} state=installed update_cache=yes cache_valid_time=604800
  when: "ansible_os_family == 'Debian'"
  with_items:
  - nfs-kernel-server
  - torque-server
  - torque-scheduler
  - torque-client

# NFS tasks

- service: name=rpcbind state=started enabled=yes
  when: "ansible_os_family == 'RedHat'"

- service: name={{nfs_svc_name}} state=started enabled=yes
  when: "ansible_os_family == 'RedHat'"

- service: name=nfslock state=started enabled=yes
  when: "ansible_os_family == 'RedHat'"

- lineinfile: dest=/etc/exports regexp=^/home line="/home           {{ groups.wn | join("(rw,sync,no_root_squash,no_subtree_check) ") }}"(rw,sync,no_root_squash,no_subtree_check)
  when: groups.wn is defined

- name: export exports file
  command: exportfs -ra

- name: Open ports in the firewall for NFS
  command: iptables -I INPUT -p {{ item[1] }} --dport {{ item[0] }}:{{ item[0] }} -j ACCEPT
  ignore_errors: yes
  with_nested:
   - [ '111', '2049' ]
   - [ 'tcp', 'udp' ]

#Torque tasks

- copy: content={{torque_server}} dest=/etc/torque/server_name
  notify:
   - restart {{server_service}}
   - restart {{scheduler_service}}

- template: src=hosts.conf dest={{torque_path}}/server_priv/nodes
  notify:
   - restart {{server_service}}
   - restart {{scheduler_service}}

- template: src=ssh_known_hosts.conf dest=/etc/ssh/ssh_known_hosts

- command: /usr/sbin/create-munge-key creates=/etc/munge/munge.key
  when: "ansible_os_family == 'RedHat'"
  notify:
  - restart munge
 
- file: path=/etc/munge/munge.key owner=munge group=munge mode=0400
  when: "ansible_os_family == 'RedHat'"
  notify:
  - restart munge

- service: name={{scheduler_service}} state=started pattern=/usr/sbin/pbs_sched

- service: name={{server_service}} state=started pattern=/usr/sbin/pbs_server

- service: name=munge state=started
  when: "ansible_os_family == 'RedHat'"

- shell: echo "{{ lookup('file', 'queue.txt') }}" | qmgr creates={{torque_path}}/server_priv/queues/batch
