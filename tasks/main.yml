- include_vars: "{{ansible_os_family}}.yml"

# User creation, server actions
- name: Create User {{item.name}}
  register: result
  local_action: user uid={{item.id}} name={{item.name}} password={{item.password}} generate_ssh_key=yes shell=/bin/bash
  with_items: USERS
  ignore_errors: yes

- local_action: shell cp /home/{{item.name}}/.ssh/id_rsa.pub /tmp/{{item.name}}_id_rsa.pub creates=/tmp/{{item.name}}_id_rsa.pub
  with_items: USERS

- name: Create User {{item.name}}
  action: user uid={{item.id}} name={{item.name}} password={{item.password}} shell=/bin/bash
  with_items: USERS

- name: Add the authorized_key to the user {{item.name}}
  local_action: authorized_key user={{item.name}} key="{{ lookup('file', '/tmp/' + item.name + '_id_rsa.pub') }}"
  with_items: USERS

- template: src=ssh_known_hosts.conf dest=/etc/ssh/ssh_known_hosts

- name: check file epel.repo
  stat: path=/etc/yum.repos.d/epel.repo
  register: epel_repo
  when: "ansible_os_family == 'RedHat'"

- name: create epel.repo
  action: template src=epel.repo dest=/etc/yum.repos.d/epel.repo 
  when: "ansible_os_family == 'RedHat' and epel_repo.stat.exists == false"

- include: "{{torque_type_of_node}}.yml"

- name: Open ports in the firewall
  command: iptables -I INPUT -p {{item}} --dport 15001:15004 -j ACCEPT
  ignore_errors: yes
  with_items:
   - tcp
   - udp

- name: save iptables
  shell: iptables-save > /etc/sysconfig/iptables
  when: "ansible_os_family == 'RedHat'"

# to avoid errors if using this recipe without the IM
- wait_for: port=2049 delay=10 host={{ hostvars[groups['front'][0]]['ansible_eth0']['ipv4']['address'] }} timeout=300
  when: "torque_type_of_node == 'mom' and not hostvars[groups['front'][0]]['IM_NODE_NET_0_IP'] is defined and hostvars[groups['front'][0]]['ansible_eth0']['ipv4']['address'] != ansible_eth0.ipv4.address"
  ignore_errors: yes

- mount: name=/home src={{ hostvars[groups['front'][0]]['ansible_eth0']['ipv4']['address'] }}:/home fstype=nfs state=mounted
  when: "torque_type_of_node == 'mom' and not hostvars[groups['front'][0]]['IM_NODE_NET_0_IP'] is defined and hostvars[groups['front'][0]]['ansible_eth0']['ipv4']['address'] != ansible_eth0.ipv4.address"

- wait_for: port=2049 delay=10 host={{ hostvars[groups['front'][0]]['IM_NODE_NET_0_IP'] }} timeout=300
  when: "torque_type_of_node == 'mom' and hostvars[groups['front'][0]]['IM_NODE_NET_0_IP'] is defined and hostvars[groups['front'][0]]['IM_NODE_NET_0_IP'] != IM_NODE_NET_0_IP"
  ignore_errors: yes
  
- mount: name=/home src={{ hostvars[groups['front'][0]]['IM_NODE_NET_0_IP'] }}:/home fstype=nfs state=mounted
  when: "torque_type_of_node == 'mom' and hostvars[groups['front'][0]]['IM_NODE_NET_0_IP'] is defined and hostvars[groups['front'][0]]['IM_NODE_NET_0_IP'] != IM_NODE_NET_0_IP"
